!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define("cmg_func",[],t):"object"==typeof exports?exports.cmg_func=t():e.cmg_func=t()}(window,(function(){return function(e){var t={};function r(n){if(t[n])return t[n].exports;var i=t[n]={i:n,l:!1,exports:{}};return e[n].call(i.exports,i,i.exports,r),i.l=!0,i.exports}return r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var i in e)r.d(n,i,function(t){return e[t]}.bind(null,i));return n},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r(r.s=0)}([function(e,t,r){"use strict";r.r(t);function n(e){this.referenceValue=e,this.average=0,this.lastAverage=null,this.variance=0,this.count=0}n.prototype.addNewMeasurement=function(e){this.count+=1,this.lastAverage=this.average,this.average=this.average+(e-this.average)/this.count,this.variance=this.variance+(e-this.lastAverage)*(e-this.average)},n.prototype.getStandardDeviation=function(){return Math.sqrt(this.variance/(this.count-1))},n.prototype.evalPrecision=function(){if(!this.count)return"NO_MEASUREMENTS_DONE_YET";const e=this.getStandardDeviation();if(Math.abs(this.average-this.referenceValue)<.5){if(e<3)return"ULTRA_PRECISE";if(e<5)return"VERY_PRECISE"}return"PRECISE"};var i=n;function u(e,t){this.referenceValue=e,this.allowedDiff=t,this.hasFailed=!1,this.count=0}u.prototype.addNewMeasurement=function(e){this.hasFailed||(this.count+=1,this.hasFailed=Math.abs(e-this.referenceValue)>this.allowedDiff)},u.prototype.evalPrecision=function(){return this.count?this.hasFailed?"DISCARD":"KEEP":"NO_MEASUREMENTS_DONE_YET"};var o=u;const a="thermometer",c="humidity",s="monoxide",f="UNKNOWN_DEVICE";r.d(t,"getReferenceDataAsObjectFromArray",(function(){return d})),r.d(t,"getLinesArrayFromString",(function(){return h})),r.d(t,"createNewDeviceMeasurementsCollector",(function(){return p})),r.d(t,"evaluateLogFile",(function(){return y})),r.d(t,"evaluateLogFileReducer",(function(){return m})),r.d(t,"Thermometer",(function(){return i})),r.d(t,"HasFailedDetector",(function(){return o}));const l={[a]:1,[c]:2,[s]:3};function d(e){return"reference"===e[0]?{[a]:e[l[a]],[c]:e[l[c]],[s]:e[l[s]]}:{}}function h(e){return e.split("\r\n").reduce((e,t)=>(e.push(t.split(" ")),e),[])}function p(e,t){switch(e){case a:return new i(t);case c:return new o(t,1);case s:return new o(t,3)}}const v=[a,c,s];function y(e,t){if(!e)return{};const r=h(e),n={result:{},currentDeviceName:null,referenceDataPerType:t||d(r[0])},i=r.reduce(m,n);return Object.keys(i.result).reduce((e,t)=>(e[t]=i.result[t].evalPrecision(),e),{})}function m({result:e,currentDeviceName:t,referenceDataPerType:r},n){if(v.includes(n[0])){if(!e[t=n[1]]){const i=n[0],u=r[i];e[t]=p(i,u)}}else if(t&&e[t]&&t!==f){const r=n[1];e[t].addNewMeasurement(r)}else t=f;return{result:e,currentDeviceName:t,referenceDataPerType:r}}}])}));
//# sourceMappingURL=cmg_func.js.map
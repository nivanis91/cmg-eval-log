!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e():"function"==typeof define&&define.amd?define("cmg_func",[],e):"object"==typeof exports?exports.cmg_func=e():t.cmg_func=e()}(window,(function(){return function(t){var e={};function r(n){if(e[n])return e[n].exports;var o=e[n]={i:n,l:!1,exports:{}};return t[n].call(o.exports,o,o.exports,r),o.l=!0,o.exports}return r.m=t,r.c=e,r.d=function(t,e,n){r.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:n})},r.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},r.t=function(t,e){if(1&e&&(t=r(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var o in t)r.d(n,o,function(e){return t[e]}.bind(null,o));return n},r.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return r.d(e,"a",e),e},r.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},r.p="",r(r.s=0)}([function(t,e,r){"use strict";r.r(e);function n(t){this.realTemperature=t,this.workData=0,this.lastWorkData=null,this.S=0,this.count=0}n.prototype.addMeasurement=function(t){this.count+=1,this.lastWorkData=this.workData,this.workData=this.workData+(t-this.workData)/this.count,this.S=this.S+(t-this.lastWorkData)*(t-this.workData)},n.prototype.getStandardDeviation=function(){return Math.sqrt(this.S/(this.count-1))},n.prototype.calcPrecision=function(){var t=this.getStandardDeviation();if(Math.abs(this.workData-this.realTemperature)<.5){if(t<3)return"ULTRA_PRECISE";if(t<5)return"VERY_PRECISE"}return"PRECISE"},n.prototype.toJSON=n.prototype.calcPrecision;var o=n;function i(t,e){this.realValue=t,this.allowedDiff=e,this.hasFailed=!1}i.prototype.addMeasurement=function(t){this.hasFailed||(this.hasFailed=Math.abs(t-this.realValue)>this.allowedDiff)},i.prototype.isValid=function(){return this.hasFailed?"DISCARD":"KEEP"},i.prototype.toJSON=i.prototype.isValid;var a=i;const u="thermometer",s="humidity",c="monoxide";function f(t){const e=t.split(" ");return{[u]:e[1],[s]:e[2],[c]:e[3]}}function l(t){return t.split("\r\n")}function d(t,e){switch(t){case u:return new o(e);case s:return new a(e,1);case c:return new a(e,3)}}r.d(e,"readCurrentData",(function(){return f})),r.d(e,"getLinesArrayFromString",(function(){return l})),r.d(e,"addDevice",(function(){return d})),r.d(e,"Thermometer",(function(){return o})),r.d(e,"HasFailedDetector",(function(){return a}));var p=[u,s,c];e.default=function(t){if(!t)return{};const e=l(t),r=f(e[0]);e.shift();let n={},o=null;return e.forEach(t=>{const e=t.split(" ");if(p.indexOf(e[0])>-1){if(o=e[1],!n[o]){const t=e[0],i=r[t];n[o]=d(t,i)}}else n[o].addMeasurement(e[1])}),n}}])}));
//# sourceMappingURL=cmg_func.js.map
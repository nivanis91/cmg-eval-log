{"version":3,"sources":["webpack://cmg_func/webpack/universalModuleDefinition","webpack://cmg_func/webpack/bootstrap","webpack://cmg_func/./src/types/devices/Thermometer.js","webpack://cmg_func/./src/types/devices/HasFailedDetector.js","webpack://cmg_func/./src/constants.js","webpack://cmg_func/./src/main.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Thermometer","realTemperature","this","workData","lastWorkData","S","count","addMeasurement","measurement","getStandardDeviation","Math","sqrt","calcPrecision","stDev","abs","toJSON","HasFailedDetector","realValue","allowedDiff","hasFailed","isValid","THERMOMETER","HUMIDITY","MONOXIDE","readCurrentData","initLine","elems","split","getLinesArrayFromString","logStr","addDevice","deviceName","currentValue","devices","linesArray","currentData","shift","result","currentDevice","forEach","line","lineElements","indexOf"],"mappings":"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","file":"build/cmg_func.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"cmg_func\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"cmg_func\"] = factory();\n\telse\n\t\troot[\"cmg_func\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","export const ULTRA_PRECISE = 'ULTRA_PRECISE';\r\nexport const VERY_PRECISE = 'VERY_PRECISE';\r\nexport const PRECISE = 'PRECISE';\r\n\r\nfunction Thermometer(realTemperature) {\r\n    this.realTemperature = realTemperature;\r\n\tthis.workData = 0;\r\n\tthis.lastWorkData = null;\r\n\tthis.S = 0;\r\n\tthis.count = 0;\r\n}\r\n\r\nThermometer.prototype.addMeasurement = function (measurement) {\r\n\tthis.count += 1;\r\n\tthis.lastWorkData = this.workData;\r\n\tthis.workData = this.workData + (measurement - this.workData) / this.count;\r\n\tthis.S = this.S + (measurement - this.lastWorkData) * (measurement - this.workData);\r\n};\r\n\r\nThermometer.prototype.getStandardDeviation = function () {\r\n\treturn Math.sqrt(this.S / (this.count - 1));\r\n};\r\n\r\nThermometer.prototype.calcPrecision = function () {\r\n\tvar stDev = this.getStandardDeviation();\r\n\r\n\tvar meanPrecise = Math.abs(this.workData - this.realTemperature);\r\n\t\r\n\tif(meanPrecise < 0.5) {\r\n\t\tif (stDev < 3) {\r\n\t\t\treturn ULTRA_PRECISE;\r\n\t\t} else if (stDev < 5) {\r\n\t\t\treturn VERY_PRECISE;\r\n\t\t}\r\n\t}\r\n\r\n\treturn PRECISE;\r\n};\r\n\r\nThermometer.prototype.toJSON = Thermometer.prototype.calcPrecision;\r\n\r\nexport default Thermometer;\r\n","export const KEEP = 'KEEP';\r\nexport const DISCARD = 'DISCARD';\r\n\r\nfunction HasFailedDetector(realValue, allowedDiff) {\r\n    this.realValue = realValue;\r\n    this.allowedDiff = allowedDiff;\r\n\tthis.hasFailed = false;\r\n};\r\n\r\nHasFailedDetector.prototype.addMeasurement = function (measurement) {\r\n\tif (this.hasFailed) {\r\n\t\treturn;\r\n\t}\r\n\r\n\tthis.hasFailed = Math.abs(measurement - this.realValue) > this.allowedDiff;\r\n};\r\n\r\nHasFailedDetector.prototype.isValid = function () {\r\n\treturn this.hasFailed ? DISCARD : KEEP;\r\n};\r\n\r\nHasFailedDetector.prototype.toJSON = HasFailedDetector.prototype.isValid;\r\n\r\nexport default HasFailedDetector;\r\n","// devices list\r\nexport const THERMOMETER = 'thermometer';\r\nexport const HUMIDITY = 'humidity';\r\nexport const MONOXIDE = 'monoxide';","import Thermometer from './types/devices/Thermometer';\r\nimport HasFailedDetector from './types/devices/HasFailedDetector';\r\nimport {\r\n    HUMIDITY,\r\n    MONOXIDE, \r\n    THERMOMETER\r\n} from './constants';\r\n\r\nexport function readCurrentData(initLine) {\r\n    const elems = initLine.split(' ');\r\n\r\n    return {\r\n        [THERMOMETER]: elems[1],\r\n        [HUMIDITY]: elems[2],\r\n        [MONOXIDE]: elems[3],\r\n    };\r\n};\r\n\r\nexport function getLinesArrayFromString(logStr) {\r\n    return logStr.split('\\r\\n');\r\n};\r\n\r\nexport function addDevice(deviceName, currentValue) {\r\n    switch (deviceName) {\r\n        case THERMOMETER:\r\n            return new Thermometer(currentValue);\r\n        case HUMIDITY:\r\n            return new HasFailedDetector(currentValue, 1);\r\n        case MONOXIDE:\r\n            return new HasFailedDetector(currentValue, 3);\r\n        default:\r\n            break;\r\n    }\r\n}\r\n\r\nvar devices = [THERMOMETER, HUMIDITY, MONOXIDE];\r\n\r\nfunction evaluateLogFile(logStr) {\r\n    if(!logStr) {\r\n        return {};\r\n    }\r\n    \r\n    const linesArray = getLinesArrayFromString(logStr);\r\n    \r\n    const currentData = readCurrentData(linesArray[0]);\r\n    linesArray.shift();\r\n\r\n    let result = {};\r\n    let currentDevice = null;\r\n\r\n    linesArray.forEach(line => {\r\n        const lineElements = line.split(' ');\r\n\r\n        if (devices.indexOf(lineElements[0]) > -1) {\r\n            currentDevice = lineElements[1];\r\n\r\n            // prevent overwriting in case the same device appears later in log\r\n            if (!result[currentDevice]) {\r\n                const deviceName = lineElements[0];\r\n                const currentValue = currentData[deviceName];\r\n\r\n                result[currentDevice] = addDevice(deviceName, currentValue);\r\n            }\r\n\r\n            return;\r\n        }\r\n    \r\n        result[currentDevice].addMeasurement(lineElements[1]);\r\n    });\r\n\r\n    return result;\r\n};\r\n\r\nexport {Thermometer, HasFailedDetector};\r\nexport default evaluateLogFile;\r\n"],"sourceRoot":""}